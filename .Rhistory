#    attr(x, "scaled:center") <- center
#if (is.numeric(scale))
#    attr(x, "scaled:scale") <- scale
x
}
engine.random<-function(x,y,Radius=0.01,TopN=10,Flavour=NULL){
dist<-mapply(f.dist.xy,x,y,
B.Basic.Rst.2$latitude,B.Basic.Rst.2$longitude)
B.inO<-B.Basic.Rst.2[dist<Radius,]
if(!is.null(Flavour)){
flavor.list<-vector()
for(flavor.ith in 1:length(Flavour$flavor)){
flavor.list<-c(flavor.list,filter(B.inO,grepl(Flavour$flavor[flavor.ith],categories))$business_id)
}
B.inO<-filter(B.inO,business_id %in% unique(flavor.list))
}
len=dim(B.inO)[1]
if(len<TopN)
return(B.inO$business_id)
else
return(sample_n(B.inO,TopN)$business_id)
}
engine.popular<-function(x,y,Radius=0.01,TopN=8,Flavour=NULL,Kstar=0.5,sigma=0.233){
# 得到范围内餐馆
dist<-mapply(f.dist.xy,x,y,
B.Basic.Rst.2$latitude,B.Basic.Rst.2$longitude)
B.inO<-B.Basic.Rst.2[dist<Radius,]
# 加入用户对口味的偏好
if(!is.null(Flavour)){
for(flavor.ith in 1:length(Flavour$flavor)){
#      flavor.list<-c(flavor.list,filter(B.inO,grepl(Flavour$flavor[flavor.ith],categories))$business_id)
B.inO[grepl(Flavour$flavor[flavor.ith],B.inO$categories),]$stars =
B.inO[grepl(Flavour$flavor[flavor.ith],B.inO$categories),]$stars+sigma*Flavour$score[flavor.ith]
}
#    B.inO<-filter(B.inO,business_id %in% unique(flavor.list))
}
# 检验剩余餐馆是否小于topN，如小于直接输出所有结果
len=dim(B.inO)[1]
if(len<TopN){
return(B.inO$business_id)
}
else{
# 以餐馆进行分组，统计UR.Rst中每个餐馆的区域评分
UR.inO<-select(UR.Rst.2,-stars)%>%
filter(business_id %in% B.inO$business_id)%>%
left_join(select(B.inO,business_id,stars))%>%
mutate(diff=as.numeric(max(date)-date),newstars=exp(stars))%>%
mutate(logdiff=1/log(diff+2.33),dateStar=Kstar*logdiff*newstars)%>%
group_by(business_id)%>%
summarise(score=sum(dateStar))%>%
arrange(desc(score))
B.inO<-as.data.frame(UR.inO[1:TopN,])
return(B.inO)
}
}
f.dist.xy<-function(x1,y1,x2,y2){
return(sum((x1-x2)^2+(y1-y2)^2)^0.5)
#    return(sum((p1-p2)^2)^0.5)
}
runApp('RRAPP1')
library(dplyr)
library(data.table)
library(igraph)
library(data.table)
library(dplyr)
# library(extrafont)
# library(extrafontdb)
# font_import()
# y
# loadfonts(device="pdf")
# loadfonts("win")
library(ggplot2)
library(showtext)
showtext.auto()
showtext.opts(dpi = 120)
#font.add("Times New Roman", "times.ttf")
showtext.begin()
library(data.table)
library(dplyr)
# library(extrafont)
# library(extrafontdb)
# font_import()
# y
# loadfonts(device="pdf")
# loadfonts("win")
library(ggplot2)
library(showtext)
showtext.auto()
showtext.opts(dpi = 120)
path="E:/git/plot-SLAMORB/"
path.data="orangepi_data_20170412"
path.data<-paste("src/",path.data,sep="")
setwd(path)
setwd(path.data)
file.list<-list.files()
file.list
record.index<-c(10,11,7,8,9)
pose.record<-list()
time.record<-list()
for(record.ith in 1:5){
# pose.record
pose.record[[record.ith]]<-as.data.frame(fread(file.list[record.ith],header=F))
names(pose.record[[record.ith]])<-c("x","y","z")
temp<-t(as.data.frame(strsplit(pose.record[[record.ith]]$x,":")))
pose.record[[record.ith]]$x<-as.numeric(temp[,2])
pose.record[[record.ith]]$frame.number<-as.numeric(temp[,1])+1
# time.record
time.record[[record.ith]]<-as.data.frame(fread(file.list[record.ith+5],header=F))
names(time.record[[record.ith]])<-c("frame.number","time")
time.record[[record.ith]]$frame.number<-1:length(time.record[[record.ith]]$frame.number)
}
result.pose<-"pose4-22"
result.time<-"time4-22"
result.pose<-"pose4-21"
result.time<-"time4-21"
Outputname.pose="Estimated Trajectory"
Outputname.time="Computational Time"# of Each Dataset"
file.index.pose=c(1,2)
file.index.time=c(1)
plot.width=8
plot.height=5
size.title=20
size.labs=17  #坐标轴标题
size.axis=12  #坐标轴刻度
pose.title=Outputname.pose
pose.xlab="x(m)"
pose.ylab="y(m)"
time.title="Computational Time in Sequence: MH_5_difficult"
time.xlab="Frame Number"
time.ylab="Time(ms)"
size.border=3
size.line.pose=2
size.marker.pose=4
size.line.time=1
size.marker.time=2
font.famly="Times"
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
g.pose.together
font.families()
font.add("Times New Roman", "times.ttf")
path="E:/git/plot-SLAMORB/"
path="E:/git/plot-SLAMORB/"
path.data="orangepi_data_20170412"
path.data<-paste("src/",path.data,sep="")
setwd(path)
# "times.ttf"     "timesbd.ttf"   "timesbi.ttf"   "timesi.ttf"
###########################################################
setwd(path.data)
file.list<-list.files()
file.list
# 看看它读入的文件顺序，填入record.index，比如我这边是10,11,7,8,9，另外注意一下pose和time哪个先，我怕不同系统上会不一样
# [1] "pose_record_10.txt"        "pose_record_11.txt"        "pose_record_7.txt"         "pose_record_8.txt"         "pose_record_9.txt"
# [6] "time_record_client_10.txt" "time_record_client_11.txt" "time_record_client_7.txt"  "time_record_client_8.txt"  "time_record_client_9.txt"
record.index<-c(10,11,7,8,9)
####################################################################
# 数据预处理
# 这里注意，输完file.list查看需要的文件排序，检查需要文件index，设置setting中的file.index.pose和file.index.time（处理文件）
# file.list
###########################################################
pose.record<-list()
time.record<-list()
for(record.ith in 1:5){
# pose.record
pose.record[[record.ith]]<-as.data.frame(fread(file.list[record.ith],header=F))
names(pose.record[[record.ith]])<-c("x","y","z")
temp<-t(as.data.frame(strsplit(pose.record[[record.ith]]$x,":")))
pose.record[[record.ith]]$x<-as.numeric(temp[,2])
pose.record[[record.ith]]$frame.number<-as.numeric(temp[,1])+1
# time.record
time.record[[record.ith]]<-as.data.frame(fread(file.list[record.ith+5],header=F))
names(time.record[[record.ith]])<-c("frame.number","time")
time.record[[record.ith]]$frame.number<-1:length(time.record[[record.ith]]$frame.number)
}
result.pose<-"pose4-21"
result.time<-"time4-21"
# 设置输出文件名字
Outputname.pose="Estimated Trajectory"
Outputname.time="Computational Time"# of Each Dataset"
# 输出pose文件索引
file.index.pose=c(1,2)
file.index.time=c(1)
# 输出图长宽
plot.width=8
plot.height=5
# 文字大小，注意ggplot2里，图表的大小是相对的，但字体的大小是绝对的，需要结合输出长宽一起改
size.title=20
size.labs=17  #坐标轴标题
size.axis=12  #坐标轴刻度
# size.legend=12  #图例大小
# size.legend.title=17  #图例标签
# 文字标题
pose.title=Outputname.pose
pose.xlab="x(m)"
pose.ylab="y(m)"
time.title="Computational Time in Sequence: MH_5_difficult"
time.xlab="Frame Number"
time.ylab="Time(ms)"
# 边框粗细
size.border=3
# 图上粗细大小
size.line.pose=2
size.marker.pose=4
size.line.time=1
size.marker.time=2
# font
font.famly="Times"
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
g.pose.together
font.famly="Times New Roman"
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
g.pose.together
setwd(path);source('script/plot_time.R', encoding = 'UTF-8')
setwd(path)
setwd("src")
list.files()
keyframe<-as.data.frame(fread(list.files()[2],header=T))
View(keyframe)
keyframe<-as.data.frame(fread(list.files()[2],header=F))
View(keyframe)
View(keyframe)
setwd(path)
setwd("src")
keyframe<-as.data.frame(fread(list.files()[2],header=F))
View(keyframe)
names(keyframe)<-c("frame number","x","y","z")
setwd("result")
if(!dir.exists(result.pose)){
dir.create(result.pose)
}
setwd(path)
setwd("result")
if(!dir.exists(result.pose)){
dir.create(result.pose)
}
setwd(result.pose)
len<-dim(keyframe)[1]
g.keyframe<-ggplot(data=pose.temp,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
facet_wrap(~index,ncol=2,scales = "free")+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border)
)
g.keyframe
g.keyframe<-ggplot(data=keyframe,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
facet_wrap(~index,ncol=2,scales = "free")+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border)
)
warnings()
g.keyframe
g.keyframe<-ggplot(data=keyframe,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border)
)
g.keyframe
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".png",sep=""),
g.keyframe,device="png",
width = plot.width,height = plot.height,units = "in")
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".pdf",sep=""),
g.keyframe,device="pdf",
width = plot.width,height = plot.height,units = "in")
size.title=40
size.labs=30  #坐标轴标题
size.axis=24  #坐标轴刻度
size.line.pose=1.5
size.marker.pose=3
g.keyframe<-ggplot(data=keyframe,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border)
)
g.keyframe
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".png",sep=""),
g.keyframe,device="png",
width = plot.width,height = plot.height,units = "in")
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".pdf",sep=""),
g.keyframe,device="pdf",
width = plot.width,height = plot.height,units = "in")
size.title=30
size.labs=25  #坐标轴标题
size.axis=15  #坐标轴刻度
g.keyframe<-ggplot(data=keyframe,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border)
)
g.keyframe
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".png",sep=""),
g.keyframe,device="png",
width = plot.width,height = plot.height,units = "in")
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".pdf",sep=""),
g.keyframe,device="pdf",
width = plot.width,height = plot.height,units = "in")
size.border=1.5
# 图上粗细大小
size.line.pose=.75
size.marker.pose=2.5
size.line.time=1
size.marker.time=2
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
setwd(path)
setwd("result")
if(!dir.exists(result.pose)){
dir.create(result.pose)
}
setwd(result.pose)
len<-dim(keyframe)[1]
g.keyframe<-ggplot(data=keyframe,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border,color="black")
)
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".png",sep=""),
g.keyframe,device="png",
width = plot.width,height = plot.height,units = "in")
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".pdf",sep=""),
g.keyframe,device="pdf",
width = plot.width,height = plot.height,units = "in")
setwd(path)
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
setwd(path)
setwd("result")
if(!dir.exists(result.pose)){
dir.create(result.pose)
}
setwd(result.pose)
len<-dim(keyframe)[1]
g.keyframe<-ggplot(data=keyframe,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border,color="black")
)
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".png",sep=""),
g.keyframe,device="png",
width = plot.width,height = plot.height,units = "in")
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".pdf",sep=""),
g.keyframe,device="pdf",
width = plot.width,height = plot.height,units = "in")
size.border=11
size.border=1
size.line.pose=.75
size.marker.pose=2.5
size.line.time=1
size.marker.time=2
font.famly="Times New Roman"
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
g.pose.together
g.keyframe<-ggplot(data=keyframe,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border,color="black")
)
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".png",sep=""),
g.keyframe,device="png",
width = plot.width,height = plot.height,units = "in")
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".pdf",sep=""),
g.keyframe,device="pdf",
width = plot.width,height = plot.height,units = "in")
size.border=1
g.keyframe<-ggplot(data=keyframe,aes(x,y))+
geom_path(size=size.line.pose,color="navy")+
geom_point(color="orange",shape=7,size=size.marker.pose)+
labs(title=pose.title,x=pose.xlab,y=pose.ylab)+
theme_light()+
scale_y_reverse()+
scale_x_reverse()+
theme(
#    legend.background = element_rect(size=0.5, linetype="solid", colour ="darkblue"),
#    legend.position="bottom",
text=element_text(family = font.famly),#family="Times New Roman"),
plot.title = element_text(size=size.title,hjust = 0.5),
axis.text.x = element_text(size = size.axis),
axis.text.y = element_text(size = size.axis),
axis.title.x = element_text(size = size.labs),
axis.title.y = element_text(size = size.labs),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(size=size.border,color="black")
)
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".png",sep=""),
g.keyframe,device="png",
width = plot.width,height = plot.height,units = "in")
ggsave(filename=paste(paste(Outputname.pose,"new",Sys.Date(),sep="-"),".pdf",sep=""),
g.keyframe,device="pdf",
width = plot.width,height = plot.height,units = "in")
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
g.pose.together
plot.width=16
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
plot.width=8
plot.height=10
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
setwd(path)
source('script/plot_trajectory.R', encoding = 'UTF-8')
setwd(path);source('script/plot_trajectory.R', encoding = 'UTF-8')
